---
import type { ImageMetadata } from 'astro';

interface Props {
  src: ImageMetadata | string;
  alt: string;
  caption?: string;
}

const { src, alt, caption } = Astro.props;
const svgUrl = typeof src === 'string' ? src : src.src;
---

<figure class="w-full max-w-full overflow-hidden my-8">
  <div class="generic-svg w-full max-w-full overflow-hidden" data-svg-url={svgUrl} aria-label={alt}>
    <img src={svgUrl} alt={alt} style="display: none;" />
  </div>
  {caption && (
    <figcaption class="text-center mt-4 text-sm text-skin-base italic">{caption}</figcaption>
  )}
</figure>

<script is:inline>
  function initGenericSVG() {
    const containers = document.querySelectorAll('.generic-svg');
    containers.forEach(async (container) => {
      const svgUrl = container.dataset.svgUrl;
      if (!svgUrl) return;

      try {
        const response = await fetch(svgUrl);
        if (!response.ok) throw new Error(`HTTP ${response.status}`);
        const svgText = await response.text();
        container.innerHTML = svgText;
      } catch (err) {
        console.error('Failed to load generic SVG:', err);
        container.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 300 40">
          <text x="0" y="20" fill="red">Error loading SVG</text>
        </svg>`;
      }
    });
  }

  document.addEventListener('DOMContentLoaded', initGenericSVG);
  document.addEventListener('astro:page-load', initGenericSVG);
</script>

<style>
  :global(.generic-svg svg) {
    width: 100%;
    height: auto;
  }
</style>